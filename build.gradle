buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'me.champeau.gradle:japicmp-gradle-plugin:0.3.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:6.1.0'
    }
}

ext {
    libs = [
            gson: 'com.google.code.gson:gson:2.8.9',
            hamcrest: 'org.hamcrest:hamcrest:2.2',
            jacksonDatabind: 'com.fasterxml.jackson.core:jackson-databind:2.13.1',
            jettison: 'org.codehaus.jettison:jettison:1.4.1',
            jsonOrg: 'org.json:json:20140107',
            jsonSmart: 'net.minidev:json-smart:2.4.8',
            slf4jApi: 'org.slf4j:slf4j-api:1.7.33',
            tapestryJson: 'org.apache.tapestry:tapestry-json:5.8.0',
            jakartaJsonP: 'jakarta.json:jakarta.json-api:2.0.1',
            jakartaJsonB: 'jakarta.json.bind:jakarta.json.bind-api:2.0.0',

            test: [
                    'commons-io:commons-io:2.11.0',
                    'junit:junit:4.13.2',
                    'org.assertj:assertj-core:3.22.0',
                    'org.hamcrest:hamcrest:2.2',
                    'org.glassfish:jakarta.json:2.0.1',
                    'org.eclipse:yasson:2.0.4',
                    //'org.apache.johnzon:johnzon-jsonb:1.2.12',
                    'org.slf4j:slf4j-simple:1.7.35'
            ]
    ]
    snapshotVersion = true
}

allprojects {
    ext.displayName = null
    ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

    group = 'com.jayway.jsonpath'
    version = '2.8.0' + (snapshotVersion ? "-SNAPSHOT" : "")

    if (JavaVersion.current().isJava8Compatible()) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'biz.aQute.bnd.builder'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    signing {
        required { !snapshotVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    artifacts {
        archives jar, javadocJar, sourcesJar
    }
}

wrapper {
    gradleVersion = '5.6.2'
}

//Task used by Heroku for staging
task stage(dependsOn: [':json-path-web-test:clean', 'json-path-web-test:jar', 'json-path-web-test:shadowJar']) {}
apply from: "$rootDir/gradle/binaryCompatibility.gradle"
